import React, { useState, useEffect, useContext } from "react";
import { useNavigate, useLocation, Navigate } from "react-router-dom"; // ✅ Import Navigate
import "./LoginRegister.css";
import { FaLock, FaUser, FaEnvelope } from "react-icons/fa";
import AuthContext from "../context/AuthContext";

export default function LoginRegister() {
  const [action, setAction] = useState("");
  const [username, setUsername] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [password2, setPassword2] = useState("");
  const [agreeTerms, setAgreeTerms] = useState(false);
  const navigate = useNavigate();
  const location = useLocation();
  const { user, loginUser, registerUser } = useContext(AuthContext); // ✅ Get user from context

  // ✅ useEffect must be at the top before any return
  useEffect(() => {
    if (location.pathname === "/register") {
      setAction("active");
    } else {
      setAction("");
    }
  }, [location.pathname]);

  // ✅ Move conditional redirect AFTER useEffect
  if (user) {
    return <Navigate to="/" replace />;
  }

  const registerLink = () => {
    setAction("active");
    navigate("/register");
  };

  const loginLink = () => {
    setAction("");
    navigate("/login");
  };

  const handleLogin = async (e) => {
    e.preventDefault();
    if (email.length > 0 && password.length > 0) {
      await loginUser(email, password);
    }
  };

  const handleRegister = async (e) => {
    e.preventDefault();

    if (!username || !email || !password || !password2) {
      alert("All fields are required!");
      return;
    }

    if (password !== password2) {
      alert("Passwords do not match!");
      return;
    }

    if (!agreeTerms) {
      alert("You must agree to the terms & conditions!");
      return;
    }

    await registerUser(email, username, password, password2);
  };

  return (
    <div className="login-body">
      <div className={`wrapper ${action}`}>
        {/* Login Form */}
        <div className="form-box login">
          <form onSubmit={handleLogin}>
            <h1>Login</h1>
            <div className="input-box">
              <input type="email" onChange={(e) => setEmail(e.target.value)} value={email} placeholder="Email" required />
              <FaUser className="icon" />
            </div>
            <div className="input-box">
              <input type="password" onChange={(e) => setPassword(e.target.value)} value={password} placeholder="Password" required />
              <FaLock className="icon" />
            </div>
            <div className="remember-forgot">
              <label>
                <input type="checkbox" />
                Remember me
              </label>
              <a href="#">Forgot password?</a>
            </div>
            <button type="submit">Login</button>
            <div className="register-link">
              <p>Don't have an account? <span onClick={registerLink}>Register</span></p>
            </div>
          </form>
        </div>

        {/* Register Form */}
        <div className="form-box register">
          <form onSubmit={handleRegister}>
            <h1>Registration</h1>
            <div className="input-box">
              <input type="text" placeholder="Username" onChange={(e) => setUsername(e.target.value)} value={username} required />
              <FaUser className="icon" />
            </div>
            <div className="input-box">
              <input type="email" placeholder="Email" onChange={(e) => setEmail(e.target.value)} value={email} required />
              <FaEnvelope className="icon" />
            </div>
            <div className="input-box">
              <input type="password" placeholder="Password" onChange={(e) => setPassword(e.target.value)} value={password} required />
              <FaLock className="icon" />
            </div>
            <div className="input-box">
              <input type="password" placeholder="Confirm Password" onChange={(e) => setPassword2(e.target.value)} value={password2} required />
              <FaLock className="icon" />
            </div>
            <div className="remember-forgot">
              <label>
                <input type="checkbox" checked={agreeTerms} onChange={() => setAgreeTerms(!agreeTerms)} />
                I agree to the terms & conditions
              </label>
            </div>
            <button type="submit">Register</button>
            <div className="register-link">
              <p>Already have an account? <span onClick={loginLink}>Login</span></p>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
}
