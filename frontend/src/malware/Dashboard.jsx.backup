import React, { useState, useEffect } from 'react';
import { BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';
import { Upload, Check, AlertTriangle, File, Link, BarChart2, Shield, Activity, Server, Database, Clock, ExternalLink } from 'lucide-react';
const Dashboard = () => {
  const [activeTab, setActiveTab] = useState('file');
  const [fileUploaded, setFileUploaded] = useState(false);
  const [fileName, setFileName] = useState('');
  const [urlInput, setUrlInput] = useState('');
  const [isScanning, setIsScanning] = useState(false);
  const [scanResult, setScanResult] = useState(null);
  const [recentScans, setRecentScans] = useState([
    { id: 1, type: 'file', name: 'document.pdf', result: 'safe', date: '2025-05-19' },
    { id: 2, type: 'url', name: 'https://example.com', result: 'malicious', date: '2025-05-18' },
    { id: 3, type: 'file', name: 'app.exe', result: 'malicious', date: '2025-05-17' },
    { id: 4, type: 'url', name: 'https://safepage.org', result: 'safe', date: '2025-05-16' },
    { id: 5, type: 'file', name: 'presentation.pptx', result: 'safe', date: '2025-05-15' },
  ]);
  
  const [stats, setStats] = useState({
    filesScanned: 127,
    urlsScanned: 89,
    malwareDetected: 43,
    safeItems: 173
  });

  const chartData = [
    { name: 'May 15', safe: 12, malicious: 3 },
    { name: 'May 16', safe: 19, malicious: 5 },
    { name: 'May 17', safe: 15, malicious: 8 },
    { name: 'May 18', safe: 21, malicious: 7 },
    { name: 'May 19', safe: 18, malicious: 4 },
    { name: 'May 20', safe: 24, malicious: 6 },
    { name: 'May 21', safe: 16, malicious: 10 },
  ];

  const threatTypeData = [
    { name: 'Trojans', value: 38 },
    { name: 'Ransomware', value: 22 },
    { name: 'Spyware', value: 15 },
    { name: 'Adware', value: 11 },
    { name: 'Worms', value: 9 },
    { name: 'Other', value: 5 },
  ];
  
  const handleFileChange = (event) => {
    const file = event.target.files[0];
    if (file) {
      setFileUploaded(true);
      setFileName(file.name);
      // Reset previous scan results
      setScanResult(null);
    }
  };
  
  const handleScan = () => {
    setIsScanning(true);
    
    // Simulate API call to backend
    setTimeout(() => {
      if (activeTab === 'file') {
        // Simulate file scan result
        setScanResult({
          isMalicious: Math.random() > 0.7,
          confidence: Math.floor(Math.random() * 30) + 70,
          details: {
            fileType: 'executable',
            fileSize: '2.4 MB',
            signatures: ['Suspicious API calls', 'Potential obfuscation'],
            threatLevel: Math.random() > 0.7 ? 'High' : 'Low'
          }
        });
      } else {
        // Simulate URL scan result
        setScanResult({
          isMalicious: Math.random() > 0.5,
          confidence: Math.floor(Math.random() * 30) + 70,
          details: {
            domain: new URL(urlInput).hostname,
            ipAddress: '192.168.1.' + Math.floor(Math.random() * 255),
            blacklisted: Math.random() > 0.7,
            threatLevel: Math.random() > 0.5 ? 'Medium' : 'Low'
          }
        });
      }
      
      // Add to recent scans
      const newScan = {
        id: recentScans.length + 1,
        type: activeTab,
        name: activeTab === 'file' ? fileName : urlInput,
        result: Math.random() > 0.7 ? 'malicious' : 'safe',
        date: new Date().toISOString().split('T')[0]
      };
      
      setRecentScans([newScan, ...recentScans.slice(0, 9)]);
      setIsScanning(false);
    }, 3000);
  };
  
  const resetForm = () => {
    setFileUploaded(false);
    setFileName('');
    setUrlInput('');
    setScanResult(null);
  };

  // Define the color constants to match the theme
  const COLORS = {
    background: '#0c1a2a',
    cardBg: '#112638',
    primary: '#06b6d4', // Cyan color similar to the network visualization
    primaryLight: 'rgba(6, 182, 212, 0.2)',
    primaryDark: '#0891b2',
    accent: '#0ea5e9', // Sky blue for accents
    success: '#10b981', // Green for safe items
    successLight: 'rgba(16, 185, 129, 0.15)',
    danger: '#ef4444', // Red for malicious items
    dangerLight: 'rgba(239, 68, 68, 0.15)',
    textPrimary: '#f3f4f6',
    textSecondary: '#94a3b8',
    border: '#1e3a5f'
  };

  const NetworkBackground = () => (
    <div className="absolute inset-0 overflow-hidden" style={{ zIndex: -1 }}>
      <div 
        className="absolute inset-0" 
        style={{ 
          backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%"><rect width="100%" height="100%" fill="%230c1a2a" /></svg>')`,
          opacity: 0.7
        }}
      />
    </div>
  );

  return (
    <div className="min-h-screen relative" style={{ backgroundColor: COLORS.background }}>
      <NetworkBackground />
      
      {/* Header */}
      <div className="py-6 px-8" style={{ borderBottom: `1px solid ${COLORS.border}` }}>
        <div className="flex items-center justify-between">
          <h1 className="text-2xl font-bold" style={{ color: COLORS.textPrimary }}>ScaniFY Dashboard</h1>
          <div className="flex items-center space-x-4">
            <button className="px-4 py-2 rounded-md font-medium" style={{ backgroundColor: 'rgba(6, 182, 212, 0.1)', color: COLORS.primary }}>
              Reports
            </button>
            <button className="px-4 py-2 rounded-md font-medium" style={{ backgroundColor: 'rgba(6, 182, 212, 0.1)', color: COLORS.primary }}>
              Settings
            </button>
            <div className="w-8 h-8 rounded-full bg-gray-700 flex items-center justify-center">
              <span className="text-sm font-medium" style={{ color: COLORS.textPrimary }}>US</span>
            </div>
          </div>
        </div>
      </div>
      
      {/* Main Content */}
      <div className="container mx-auto px-6 py-8">
        {/* Stats Cards */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          <div className="p-6 rounded-lg" style={{ backgroundColor: COLORS.cardBg, boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)' }}>
            <div className="flex items-center justify-between mb-4">
              <h3 className="font-medium" style={{ color: COLORS.textSecondary }}>Files Scanned</h3>
              <div className="p-2 rounded-md" style={{ backgroundColor: 'rgba(6, 182, 212, 0.15)' }}>
                <File style={{ color: COLORS.primary }} size={20} />
              </div>
            </div>
            <div className="flex items-end justify-between">
              <p className="text-3xl font-bold" style={{ color: COLORS.textPrimary }}>{stats.filesScanned}</p>
              <div className="flex items-center" style={{ color: COLORS.success }}>
                <span className="text-xs font-medium mr-1">+12%</span>
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M7 14L12 9L17 14" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                </svg>
              </div>
            </div>
          </div>
          
          <div className="p-6 rounded-lg" style={{ backgroundColor: COLORS.cardBg, boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)' }}>
            <div className="flex items-center justify-between mb-4">
              <h3 className="font-medium" style={{ color: COLORS.textSecondary }}>URLs Scanned</h3>
              <div className="p-2 rounded-md" style={{ backgroundColor: 'rgba(6, 182, 212, 0.15)' }}>
                <Link style={{ color: COLORS.primary }} size={20} />
              </div>
            </div>
            <div className="flex items-end justify-between">
              <p className="text-3xl font-bold" style={{ color: COLORS.textPrimary }}>{stats.urlsScanned}</p>
              <div className="flex items-center" style={{ color: COLORS.success }}>
                <span className="text-xs font-medium mr-1">+8%</span>
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M7 14L12 9L17 14" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                </svg>
              </div>
            </div>
          </div>
          
          <div className="p-6 rounded-lg" style={{ backgroundColor: COLORS.cardBg, boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)' }}>
            <div className="flex items-center justify-between mb-4">
              <h3 className="font-medium" style={{ color: COLORS.textSecondary }}>Threats Detected</h3>
              <div className="p-2 rounded-md" style={{ backgroundColor: 'rgba(239, 68, 68, 0.15)' }}>
                <AlertTriangle style={{ color: COLORS.danger }} size={20} />
              </div>
            </div>
            <div className="flex items-end justify-between">
              <p className="text-3xl font-bold" style={{ color: COLORS.textPrimary }}>{stats.malwareDetected}</p>
              <div className="flex items-center" style={{ color: COLORS.danger }}>
                <span className="text-xs font-medium mr-1">+15%</span>
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M7 10L12 15L17 10" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                </svg>
              </div>
            </div>
          </div>
          
          <div className="p-6 rounded-lg" style={{ backgroundColor: COLORS.cardBg, boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)' }}>
            <div className="flex items-center justify-between mb-4">
              <h3 className="font-medium" style={{ color: COLORS.textSecondary }}>Safe Items</h3>
              <div className="p-2 rounded-md" style={{ backgroundColor: 'rgba(16, 185, 129, 0.15)' }}>
                <Shield style={{ color: COLORS.success }} size={20} />
              </div>
            </div>
            <div className="flex items-end justify-between">
              <p className="text-3xl font-bold" style={{ color: COLORS.textPrimary }}>{stats.safeItems}</p>
              <div className="flex items-center" style={{ color: COLORS.success }}>
                <span className="text-xs font-medium mr-1">+9%</span>
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M7 14L12 9L17 14" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                </svg>
              </div>
            </div>
          </div>
        </div>
        
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* Left Column - Scan Interface */}
          <div className="lg:col-span-1">
            <div className="rounded-lg p-6 mb-6" style={{ backgroundColor: COLORS.cardBg, boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)' }}>
              <h2 className="text-xl font-semibold mb-6" style={{ color: COLORS.textPrimary }}>Security Scan</h2>
              
              <div className="mb-6">
                <div className="flex border-b" style={{ borderColor: COLORS.border }}>
                  <button 
                    className={`px-4 py-2 font-medium ${activeTab === 'file' ? 'border-b-2' : ''}`}
                    style={{ 
                      color: activeTab === 'file' ? COLORS.primary : COLORS.textSecondary,
                      borderColor: COLORS.primary 
                    }}
                    onClick={() => {
                      setActiveTab('file');
                      resetForm();
                    }}
                  >
                    <div className="flex items-center gap-2">
                      <File size={18} />
                      <span>File Scan</span>
                    </div>
                  </button>
                  <button 
                    className={`px-4 py-2 font-medium ${activeTab === 'url' ? 'border-b-2' : ''}`}
                    style={{ 
                      color: activeTab === 'url' ? COLORS.primary : COLORS.textSecondary,
                      borderColor: COLORS.primary 
                    }}
                    onClick={() => {
                      setActiveTab('url');
                      resetForm();
                    }}
                  >
                    <div className="flex items-center gap-2">
                      <Link size={18} />
                      <span>URL Scan</span>
                    </div>
                  </button>
                </div>
              </div>
              
              {activeTab === 'file' ? (
                <div className="space-y-6">
                  {!fileUploaded ? (
                    <div 
                      className="border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-colors"
                      style={{ 
                        borderColor: 'rgba(6, 182, 212, 0.3)', 
                        backgroundColor: 'rgba(6, 182, 212, 0.05)'
                      }}
                      onClick={() => document.getElementById('fileInput').click()}
                    >
                      <Upload className="mx-auto mb-4" style={{ color: COLORS.primary }} size={36} />
                      <p className="mb-2" style={{ color: COLORS.textSecondary }}>Drag and drop a file here or click to browse</p>
                      <p className="text-sm" style={{ color: 'rgba(148, 163, 184, 0.7)' }}>Supported formats: EXE, DLL, PDF, DOC, DOCX, XLS, XLSX</p>
                      <input 
                        id="fileInput" 
                        type="file" 
                        className="hidden" 
                        onChange={handleFileChange}
                      />
                    </div>
                  ) : (
                    <div className="border rounded-lg p-4" style={{ borderColor: COLORS.border, backgroundColor: 'rgba(6, 182, 212, 0.05)' }}>
                      <div className="flex items-center gap-4">
                        <div className="w-10 h-10 rounded-full flex items-center justify-center" style={{ backgroundColor: 'rgba(6, 182, 212, 0.15)' }}>
                          <File style={{ color: COLORS.primary }} size={20} />
                        </div>
                        <div className="flex-grow">
                          <p className="font-medium truncate" style={{ color: COLORS.textPrimary }}>{fileName}</p>
                          <p className="text-sm" style={{ color: COLORS.textSecondary }}>Ready to scan</p>
                        </div>
                        <button 
                          className="text-sm"
                          style={{ color: COLORS.danger }}
                          onClick={resetForm}
                        >
                          Remove
                        </button>
                      </div>
                    </div>
                  )}
                  
                  <button 
                    className="w-full py-3 rounded-lg font-medium transition-colors"
                    style={{ 
                      backgroundColor: fileUploaded ? COLORS.primary : 'rgba(6, 182, 212, 0.15)', 
                      color: fileUploaded ? '#ffffff' : 'rgba(148, 163, 184, 0.7)',
                      cursor: fileUploaded ? 'pointer' : 'not-allowed'
                    }}
                    disabled={!fileUploaded || isScanning}
                    onClick={fileUploaded ? handleScan : undefined}
                  >
                    {isScanning ? (
                      <div className="flex items-center justify-center">
                        <div className="animate-spin mr-2 h-4 w-4 border-2 border-t-transparent rounded-full" style={{ borderColor: 'rgba(255, 255, 255, 0.5)', borderTopColor: 'transparent' }}></div>
                        <span>Scanning...</span>
                      </div>
                    ) : (
                      'Scan File'
                    )}
                  </button>
                </div>
              ) : (
                <div className="space-y-6">
                  <div className="space-y-2">
                    <label htmlFor="urlInput" className="block text-sm font-medium" style={{ color: COLORS.textSecondary }}>
                      Enter URL to scan
                    </label>
                    <input
                      id="urlInput"
                      type="url"
                      value={urlInput}
                      onChange={(e) => setUrlInput(e.target.value)}
                      placeholder="https://example.com"
                      className="w-full p-3 rounded-lg focus:ring-2 transition-colors"
                      style={{ 
                        backgroundColor: 'rgba(6, 182, 212, 0.05)', 
                        border: `1px solid ${COLORS.border}`,
                        color: COLORS.textPrimary,
                        outline: 'none'
                      }}
                    />
                  </div>
                  
                  <button 
                    className="w-full py-3 rounded-lg font-medium transition-colors"
                    style={{ 
                      backgroundColor: urlInput ? COLORS.primary : 'rgba(6, 182, 212, 0.15)', 
                      color: urlInput ? '#ffffff' : 'rgba(148, 163, 184, 0.7)',
                      cursor: urlInput ? 'pointer' : 'not-allowed'
                    }}
                    disabled={!urlInput || isScanning}
                    onClick={urlInput ? handleScan : undefined}
                  >
                    {isScanning ? (
                      <div className="flex items-center justify-center">
                        <div className="animate-spin mr-2 h-4 w-4 border-2 border-t-transparent rounded-full" style={{ borderColor: 'rgba(255, 255, 255, 0.5)', borderTopColor: 'transparent' }}></div>
                        <span>Scanning...</span>
                      </div>
                    ) : (
                      'Scan URL'
                    )}
                  </button>
                </div>
              )}
              
              {/* Scan Results */}
              {scanResult && (
                <div className="mt-8 p-6 rounded-lg" style={{ 
                  backgroundColor: scanResult.isMalicious ? COLORS.dangerLight : COLORS.successLight,
                  border: `1px solid ${scanResult.isMalicious ? 'rgba(239, 68, 68, 0.3)' : 'rgba(16, 185, 129, 0.3)'}`
                }}>
                  <div className="flex items-center gap-4 mb-4">
                    {scanResult.isMalicious ? (
                      <div className="w-12 h-12 rounded-full flex items-center justify-center" style={{ backgroundColor: 'rgba(239, 68, 68, 0.2)' }}>
                        <AlertTriangle style={{ color: COLORS.danger }} size={24} />
                      </div>
                    ) : (
                      <div className="w-12 h-12 rounded-full flex items-center justify-center" style={{ backgroundColor: 'rgba(16, 185, 129, 0.2)' }}>
                        <Check style={{ color: COLORS.success }} size={24} />
                      </div>
                    )}
                    
                    <div>
                      <h3 className="font-bold text-lg" style={{ color: scanResult.isMalicious ? COLORS.danger : COLORS.success }}>
                        {scanResult.isMalicious ? 'Malicious Detected' : 'Safe'}
                      </h3>
                      <p className="text-sm" style={{ color: COLORS.textSecondary }}>
                        Confidence: {scanResult.confidence}%
                      </p>
                    </div>
                  </div>
                  
                  <div className="rounded p-4" style={{ backgroundColor: 'rgba(17, 38, 56, 0.8)' }}>
                    <h4 className="font-medium mb-2" style={{ color: COLORS.textPrimary }}>Details</h4>
                    <div className="space-y-2">
                      {Object.entries(scanResult.details).map(([key, value]) => (
                        <div key={key} className="flex">
                          <span className="w-1/3 capitalize" style={{ color: COLORS.textSecondary }}>{key.replace(/([A-Z])/g, ' $1').trim()}:</span>
                          <span className="w-2/3" style={{ color: COLORS.textPrimary }}>{typeof value === 'boolean' ? (value ? 'Yes' : 'No') : value}</span>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              )}
            </div>
            
            {/* System Status */}
            <div className="rounded-lg p-6" style={{ backgroundColor: COLORS.cardBg, boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)' }}>
              <div className="flex items-center justify-between mb-4">
                <h3 className="font-semibold" style={{ color: COLORS.textPrimary }}>System Status</h3>
                <Server className="h-5 w-5" style={{ color: COLORS.primary }} />
              </div>
              
              <div className="space-y-4">
                <div>
                  <div className="flex justify-between mb-1">
                    <span className="text-sm" style={{ color: COLORS.textSecondary }}>CPU Usage</span>
                    <span className="text-sm font-medium" style={{ color: COLORS.textPrimary }}>42%</span>
                  </div>
                  <div className="w-full h-2 rounded-full" style={{ backgroundColor: 'rgba(148, 163, 184, 0.2)' }}>
                    <div className="h-2 rounded-full" style={{ width: '42%', backgroundColor: COLORS.primary }}></div>
                  </div>
                </div>
                
                <div>
                  <div className="flex justify-between mb-1">
                    <span className="text-sm" style={{ color: COLORS.textSecondary }}>Memory Usage</span>
                    <span className="text-sm font-medium" style={{ color: COLORS.textPrimary }}>68%</span>
                  </div>
                  <div className="w-full h-2 rounded-full" style={{ backgroundColor: 'rgba(148, 163, 184, 0.2)' }}>
                    <div className="h-2 rounded-full" style={{ width: '68%', backgroundColor: COLORS.accent }}></div>
                  </div>
                </div>
                
                <div>
                  <div className="flex justify-between mb-1">
                    <span className="text-sm" style={{ color: COLORS.textSecondary }}>Disk Space</span>
                    <span className="text-sm font-medium" style={{ color: COLORS.textPrimary }}>23%</span>
                  </div>
                  <div className="w-full h-2 rounded-full" style={{ backgroundColor: 'rgba(148, 163, 184, 0.2)' }}>
                    <div className="h-2 rounded-full" style={{ width: '23%', backgroundColor: COLORS.success }}></div>
                  </div>
                </div>
                
                <div className="pt-2">
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-2">
                      <div className="w-2 h-2 rounded-full" style={{ backgroundColor: COLORS.success }}></div>
                      <span className="text-sm" style={{ color: COLORS.textSecondary }}>Service Status</span>
                    </div>
                    <span className="text-sm font-medium" style={{ color: COLORS.success }}>Operational</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          {/* Middle and Right Columns - Stats & Visualizations */}
          <div className="lg:col-span-2 space-y-6">
            {/* Detection Trend Chart */}
            <div className="rounded-lg p-6" style={{ backgroundColor: COLORS.cardBg, boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)' }}>
              <div className="flex items-center justify-between mb-6">
                <h3 className="text-lg font-semibold" style={{ color: COLORS.textPrimary }}>Detection Trend</h3>
                <div className="flex items-center gap-2">
                  <button className="px-2 py-1 text-xs rounded-md" style={{ backgroundColor: 'rgba(6, 182, 212, 0.15)', color: COLORS.primary }}>
                    Weekly
                  </button>
                  <button className="px-2 py-1 text-xs rounded-md" style={{ color: COLORS.textSecondary }}>
                    Monthly
                  </button>
                  <button className="px-2 py-1 text-xs rounded-md" style={{ color: COLORS.textSecondary }}>
                    Yearly
                  </button>
                </div>
              </div>
              
              <div className="h-72">
                <ResponsiveContainer width="100%" height="100%">
                  <LineChart data={chartData} margin={{ top: 5, right: 30, left: 0, bottom: 5 }}>
                    <CartesianGrid strokeDasharray="3 3" vertical={false} stroke="rgba(148, 163, 184, 0.2)" />
                    <XAxis 
                      dataKey="name" 
                      tick={{ fill: COLORS.textSecondary }} 
                      tickLine={{ stroke: 'rgba(148, 163, 184, 0.2)' }} 
                      axisLine={{ stroke: 'rgba(148, 163, 184, 0.2)' }} 
                    />
                    <YAxis 
                      tick={{ fill: COLORS.textSecondary }} 
                      tickLine={{ stroke: 'rgba(148, 163, 184, 0.2)' }} 
                      axisLine={{ stroke: 'rgba(148, 163, 184, 0.2)' }} 
                    />
                    <Tooltip 
                      contentStyle={{ 
                        backgroundColor: COLORS.cardBg, 
                        borderColor: COLORS.border,
                        color: COLORS.textPrimary
                      }}
                      itemStyle={{ color: COLORS.textPrimary }}
                      labelStyle={{ color: COLORS.textPrimary }}
                    />
                    <Legend 
                      wrapperStyle={{ 
                        paddingTop: '20px',
                        color: COLORS.textSecondary 
                      }} 
                    />
                    <Line 
                      type="monotone" 
                      dataKey="safe" 
                      name="Safe" 
                      stroke={COLORS.success} 
                      strokeWidth={2} 
                      dot={{ r: 4, fill: COLORS.success, strokeWidth: 0 }}
                      activeDot={{ r: 6, fill: COLORS.success, strokeWidth: 0 }}
                    />
                    <Line 
                      type="monotone" 
                      dataKey="malicious" 
                      name="Malicious" 
                      stroke={COLORS.danger} 
                      strokeWidth={2} 
                      dot={{ r: 4, fill: COLORS.danger, strokeWidth: 0 }}
                      activeDot={{ r: 6, fill: COLORS.danger, strokeWidth: 0 }}
                    />
                  </LineChart>
                </ResponsiveContainer>
              </div>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {/* Recent Scans */}
              <div className="rounded-lg p-6" style={{ backgroundColor: COLORS.cardBg, boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)' }}>
                <div className="flex items-center justify-between mb-6">
                  <h3 className="text-lg font-semibold" style={{ color: COLORS.textPrimary }}>Recent Scans</h3>
                  <Activity style={{ color: COLORS.primary }} size={20} />
                </div>
                
                <div className="overflow-hidden space-y-3">
                  {recentScans.slice(0, 5).map((scan) => (
                    <div 
                      key={scan.id} 
                      className="flex items-center p-3 rounded-lg" 
                      style={{ backgroundColor: 'rgba(17, 38, 56, 0.6)' }}
                    >
                      <div className="mr-3">
                        {scan.type === 'file' ? (
                          <div className="w-8 h-8 rounded-full flex items-center justify-center" style={{ backgroundColor: 'rgba(6, 182, 212, 0.15)' }}>
                            <File size={14} style={{ color: COLORS.primary }} />
                          </div>
                        ) : (
                          <div className="w-8 h-8 rounded-full flex items-center justify-center" style={{ backgroundColor: 'rgba(6, 182, 212, 0.15)' }}>
                            <Link size={14} style={{ color: COLORS.primary }} />
                          </div>
                        )}
                      </div>
                      
                      <div className="flex-1 min-w-0">
                        <p className="text-sm font-medium truncate" style={{ color: COLORS.textPrimary }}>{scan.name}</p>
                        <p className="text-xs" style={{ color: COLORS.textSecondary }}>{scan.date}</p>
                      </div>
                      
                      <div className="ml-2">
                        <span 
                          className="px-2 py-1 text-xs rounded-full"
                          style={{ 
                            backgroundColor: scan.result === 'safe' ? COLORS.successLight : COLORS.dangerLight,
                            color: scan.result === 'safe' ? COLORS.success : COLORS.danger
                          }}
                        >
                          {scan.result}
                        </span>
                      </div>
                    </div>
                  ))}
                </div>
                
                <button 
                  className="w-full mt-4 py-2 text-sm rounded-lg font-medium"
                  style={{ backgroundColor: 'rgba(6, 182, 212, 0.1)', color: COLORS.primary }}
                >
                  View All Scans
                </button>
              </div>
              
              {/* Threat Distribution */}
              <div className="rounded-lg p-6" style={{ backgroundColor: COLORS.cardBg, boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)' }}>
                <div className="flex items-center justify-between mb-6">
                  <h3 className="text-lg font-semibold" style={{ color: COLORS.textPrimary }}>Threat Distribution</h3>
                  <Database style={{ color: COLORS.primary }} size={20} />
                </div>
                
                <div className="space-y-4">
                  {threatTypeData.map((item) => (
                    <div key={item.name}>
                      <div className="flex justify-between mb-1">
                        <span className="text-sm" style={{ color: COLORS.textSecondary }}>{item.name}</span>
                        <span className="text-sm font-medium" style={{ color: COLORS.textPrimary }}>{item.value}%</span>
                      </div>
                      <div className="w-full h-2 rounded-full" style={{ backgroundColor: 'rgba(148, 163, 184, 0.2)' }}>
                        <div 
                          className="h-2 rounded-full" 
                          style={{ 
                            width: `${item.value}%`, 
                            backgroundColor: item.name === 'Trojans' ? COLORS.danger :
                                             item.name === 'Ransomware' ? '#f59e0b' :
                                             item.name === 'Spyware' ? '#8b5cf6' :
                                             item.name === 'Adware' ? '#ec4899' :
                                             item.name === 'Worms' ? '#f97316' : 
                                             COLORS.primary
                          }}
                        ></div>
                      </div>
                    </div>
                  ))}
                </div>
                
                <button 
                  className="w-full mt-6 py-2 text-sm rounded-lg font-medium"
                  style={{ backgroundColor: 'rgba(6, 182, 212, 0.1)', color: COLORS.primary }}
                >
                  Download Report
                </button>
              </div>
            </div>
            
            {/* Protection Status */}
            <div className="rounded-lg p-6" style={{ backgroundColor: COLORS.cardBg, boxShadow: '0 4px 20px rgba(0, 0, 0, 0.2)' }}>
              <div className="flex items-center justify-between mb-6">
                <h3 className="text-lg font-semibold" style={{ color: COLORS.textPrimary }}>Protection Status</h3>
                <Shield style={{ color: COLORS.primary }} size={20} />
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div className="p-4 rounded-lg" style={{ backgroundColor: 'rgba(17, 38, 56, 0.6)' }}>
                  <div className="flex items-center mb-3">
                    <div className="w-8 h-8 rounded-full flex items-center justify-center mr-3" style={{ backgroundColor: 'rgba(6, 182, 212, 0.15)' }}>
                      <Clock size={16} style={{ color: COLORS.primary }} />
                    </div>
                    <h4 className="font-medium" style={{ color: COLORS.textPrimary }}>Real-time Protection</h4>
                  </div>
                  
                  <div className="flex items-center justify-between">
                    <span className="text-sm" style={{ color: COLORS.textSecondary }}>Status</span>
                    <span className="text-sm font-medium" style={{ color: COLORS.success }}>Active</span>
                  </div>
                </div>
                
                <div className="p-4 rounded-lg" style={{ backgroundColor: 'rgba(17, 38, 56, 0.6)' }}>
                  <div className="flex items-center mb-3">
                    <div className="w-8 h-8 rounded-full flex items-center justify-center mr-3" style={{ backgroundColor: 'rgba(6, 182, 212, 0.15)' }}>
                      <Database size={16} style={{ color: COLORS.primary }} />
                    </div>
                    <h4 className="font-medium" style={{ color: COLORS.textPrimary }}>Database</h4>
                  </div>
                  
                  <div className="flex items-center justify-between">
                    <span className="text-sm" style={{ color: COLORS.textSecondary }}>Last Update</span>
                    <span className="text-sm font-medium" style={{ color: COLORS.textPrimary }}>Today, 08:45 AM</span>
                  </div>
                </div>
                
                <div className="p-4 rounded-lg" style={{ backgroundColor: 'rgba(17, 38, 56, 0.6)' }}>
                  <div className="flex items-center mb-3">
                    <div className="w-8 h-8 rounded-full flex items-center justify-center mr-3" style={{ backgroundColor: 'rgba(6, 182, 212, 0.15)' }}>
                      <ExternalLink size={16} style={{ color: COLORS.primary }} />
                    </div>
                    <h4 className="font-medium" style={{ color: COLORS.textPrimary }}>Scheduled Scan</h4>
                  </div>
                  
                  <div className="flex items-center justify-between">
                    <span className="text-sm" style={{ color: COLORS.textSecondary }}>Next Scan</span>
                    <span className="text-sm font-medium" style={{ color: COLORS.textPrimary }}>Tomorrow, 02:00 AM</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Dashboard;